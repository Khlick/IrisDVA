function [installedModules,status] = cleanModules()

modulePkgDir = fullfile( ...
  iris.app.Info.getAppPath(),'src','+iris','+modules' ...
  );
installedModules = cellstr(ls(modulePkgDir));
installedModules( ...
  ~endsWith(installedModules,'.mlapp','IgnoreCase',true) & ...
  ~startsWith(installedModules,'@') ...
  ) = [];
installedModules = regexp( ...
  installedModules, ...
  '(?<=@|^)(\w+)(?=\.mlapp|$)', ...
  'tokens', 'emptymatch' ...
  );
if ~isempty(installedModules)
  while ~ischar(installedModules{1})
    installedModules = cat(1,installedModules{:});
  end
end

% camelize names
installedModules = cellfun(@utilities.camelizer,installedModules,'UniformOutput',false);

% clear modules package
if ispc
  rmCmd = sprintf( ...
    [ ...
    'powershell.exe -inputformat none -Command ', ...
    '"Remove-Item -path ''%s\\*'' -ErrorAction Ignore -recurse -force"' ...
    ], ...
    modulePkgDir ...
    );
else
  rmCmd = sprintf('rm -rf "%s/"*',modulePkgDir);
end
status = struct();
[status.faulted,status.message] = system(rmCmd);
end

