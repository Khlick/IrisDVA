function createKeyboardMenu(obj)

pause(0.3); %let componenets get created... theres probably a bettr method

% Define CSS for keboards (this could be moved to externel css
keystr = iris.app.Aes.strLib('keyboardRules');

%inject keyboard css
obj.window.executeJS(keystr);

%inject keyboard html
[~,keyID] = mlapptools.getWebElements(obj.KeyboardConfig);
%w = obj.KeyboardConfig.Position(3);
%h = obj.KeyboardConfig.Position(4);
obj.KeyboardConfig.Position(4) = 600;

% keyboard parent node selector js
keyQuery = sprintf( ...
  'dojo.query("[%s = ''%s'']")[0]', ...
  keyID.ID_attr,keyID.ID_val ...
  );

% keyboard text
keyboardString = iris.app.Aes.strLib('keyboardHTML');

% initialize the variables
obj.window.executeJS('var keyNode, keydiv;');
% try until success
while true
  try
    obj.window.executeJS(...
      [...
      sprintf([...
        'keyNode = %s;keydiv = document.createElement("div");', ...
        'keydiv.innerHTML = "%s";'], ...
        keyQuery, keyboardString ...
      ), ...
      'dojo.addClass(keyNode, "aside");', ...
      'dojo.addClass(keyNode.lastChild, "aside");', ...
      'dojo.style(keyNode.lastChild, {display: "flex"});',...
      'dojo.style(keydiv, ',...
      jsonencode(...
        containers.Map( ...
          {'width','height','overflowY'}, ...
          {'100%', '297px','scroll'} ... %w,h hard coded here.
        ) ...
      ), ...
      ');', ...
      'keyNode.lastChild.appendChild(keydiv);' ...
      ]);
  catch x %#ok
    %log this
    pause(0.2)
    continue
  end
  break;
end

obj.update;


end