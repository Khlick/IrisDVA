function createKeyboardMenu(obj)
import iris.app.Info;

pause(0.3); %let componenets get created... theres probably a bettr method

% Define CSS for keboards (this could be moved to externel css
keystr = iris.app.Aes.strLib('keyboardRules');

%inject keyboard css
obj.window.executeJS(keystr);

%inject keyboard html
[~,keyID] = mlapptools.getWebElements(obj.KeyboardConfig);
%w = obj.KeyboardConfig.Position(3);
%h = obj.KeyboardConfig.Position(4);
obj.KeyboardConfig.Position(4) = 600;

% keyboard parent node selector js
keyQuery = sprintf( ...
  'dojo.query("[%s = ''%s'']")', ...
  keyID.ID_attr,keyID.ID_val ...
  );
%{ 
% <2020a
keyQuery = sprintf( ...
  'dojo.query("[%s = ''%s'']")[0]', ...
  keyID.ID_attr,keyID.ID_val ...
  );
%}
% keyboard text
keyboardString = iris.app.Aes.strLib('keyboardHTML');

% initialize the variables
obj.window.executeJS('var keyNode, childNodes, lastChild, keydiv;');
iter = 0;
% try until success
while true
  try
    %{
    obj.window.executeJS(...
      [...
      sprintf([...
        'keyNode = %s;keydiv = document.createElement("div");', ...
        'keydiv.innerHTML = "%s";'], ...
        keyQuery, keyboardString ...
      ), ...
      'dojo.addClass(keyNode, "aside");', ...
      'dojo.addClass(keyNode.lastChild, "aside");', ...
      'dojo.style(keyNode.lastChild, {display: "flex"});',...
      'dojo.style(keydiv, ',...
      jsonencode(...
        containers.Map( ...
          {'width','height','overflowY'}, ...
          {'100%', '297px','scroll'} ... %w,h hard coded here.
        ) ...
      ), ...
      ');', ...
      'keyNode.lastChild.appendChild(keydiv);' ...
      ]);
    %}
    obj.window.executeJS( ...
      sprintf( ...
        ['keydiv = document.createElement("div");', ...
        'keyNode = %s;', ...
        'keydiv.innerHTML = "%s";'], ...
        keyQuery, keyboardString ...
        ) ...
      );
    obj.window.executeJS('childNodes = dojo.query("*",keyNode[0]);');
    obj.window.executeJS( ...
      'keyNode.forEach((n,i,a) => {dojo.addClass(n,"aside");} );' ...
      );
    obj.window.executeJS( ...
      'childNodes.forEach((n,i,a) => {dojo.addClass(n,"aside");} );' ...
      );
    obj.window.executeJS( ...
      'keyNode.forEach((n,i,a) => {dojo.style(n,{display: "flex"});} );' ...
      );
    obj.window.executeJS( ...
      'childNodes.forEach((n,i,a) => {dojo.style(n,{display: "flex"});} );' ...
      );
    obj.window.executeJS( ...
      sprintf('dojo.style(keydiv, %s);', ...
        jsonencode(...
          containers.Map( ...
            {'width','height','overflowY'}, ...
            {'100%', '100%','scroll'} ... %w,h hard coded here.
          ) ...
        ) ...
      ) ...
      );
    v = ver('MATLAB');
    v = str2double(v.Version);
    if v == 9.8
      % in version 9.8 (2020a) there was an extra level in the heirarchy
      obj.window.executeJS( ...
        [ ...
          '[lastChild] = childNodes.slice(-1);', ...
          'lastChild.replaceChild(keydiv,lastChild.lastChild);' ... 
        ] ...
        );
    else
      % for <2020a and 2020b
      obj.window.executeJS( ...
        [ ...
          '[lastChild] = childNodes.slice(-1);', ...
          'lastChild.parentNode.replaceWith(keydiv);' ...
        ] ...
        );
    end
  catch x 
    %log this
    iter = iter+1;
    if iter < 100
      pause(0.02);
      continue
    end
    stackTrace = arrayfun( ...
      @(a)sprintf('line %s in %s',a.line,a.name), ...
      x.stack, ...
      'UniformOutput', false ...
      );
    Info.throwError( ...
      sprintf( ...
    'Error in %s:\n"%s"\n(%s)\n', ...
    class(obj), ...
    x.message, ...
    strjoin(stackTrace,'; ') ...
    ) ...
    );
  end
  break;
end

obj.update;


end