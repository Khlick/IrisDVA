function createUI(obj)
%createUI Creates the primary window view
%% Initialize
import iris.app.Aes;
import iris.infra.eventData;
import iris.pref.analysis;

obj.Opts = analysis.getDefault();

w = 550;
h = 400;

set(obj.container,...
  'Name', 'Analysis Export',...
  'Units', 'pixels',...
  'resize', 'on', ...
  'position', utilities.centerFigPos(w,h));

obj.labelTitle = uicontrol(obj.container,...
  'style', 'text', 'backgroundcolor', [1,1,1],...
  'units', 'pixels');
obj.labelTitle.Position = [10,h-30,110,25];
obj.labelTitle.String = 'Select Analysis:';
obj.labelTitle.FontSize = 12;
obj.labelTitle.HorizontalAlignment = 'left';

obj.selectAnalysis = uicontrol(obj.container,...
  'style', 'popupmenu', 'backgroundcolor', [1,1,1],...
  'units', 'pixels', 'String', obj.availableAnalyses);
obj.selectAnalysis.Position = [120,h-29,200,25]; %240
obj.selectAnalysis.FontSize = 9;
obj.selectAnalysis.Callback = @(s,e) ...
  obj.setFxn(eventData(s.String{s.Value}));
obj.selectAnalysis.Tooltip = Aes.strLib('analyze:selectAnalysis');

obj.editAnalysisButton = uicontrol(obj.container, ...
  'style', 'pushbutton', ...
  'string', 'Edit',...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels' ...
  );
obj.editAnalysisButton.Position = [ ...
  sum(obj.selectAnalysis.Position([1,3]))+20, h-23.5, ...
  50, 20 ...
  ];
obj.editAnalysisButton.Callback = @obj.onEditAnalysis;
obj.editAnalysisButton.Tooltip = Aes.strLib('analyze:editAnalysisTooltip');
obj.editAnalysisButton.Enable = 'off';

obj.refreshAnalysesButton = uicontrol(obj.container, ...
  'style', 'pushbutton', ...
  'string', 'Refresh',...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels' ...
  );
obj.refreshAnalysesButton.Position = [ ...
  sum(obj.editAnalysisButton.Position([1,3]))+5, h-23.5, ...
  60, 20 ...
  ];
obj.refreshAnalysesButton.Callback = @obj.onRefreshAnalyses;
obj.refreshAnalysesButton.Tooltip = Aes.strLib('analyze:refreshAnalysisTooltip');
obj.refreshAnalysesButton.Enable = 'on';

obj.setDefaultsButton = uicontrol(obj.container, ...
  'style', 'pushbutton', ...
  'string', 'Update',...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels' ...
  );
obj.setDefaultsButton.Position = [ ...
  sum(obj.refreshAnalysesButton.Position([1,3]))+5, h-23.5, ...
  60, 20 ...
  ];
obj.setDefaultsButton.Callback = @obj.onSetNewDefaults;
obj.setDefaultsButton.Tooltip = Aes.strLib('analyze:updateAnalysisTooltip');
obj.setDefaultsButton.Enable = 'off';

obj.datumInput = uicontrol(obj.container, ...
  'style', 'edit', ...
  'fontname', 'Courier New', ...
  'String', 'Enter Datums', ...
  'units', 'pixels' ...
  );
obj.datumInput.Position = [20, h-55, w-40, 20];
obj.datumInput.Callback = @obj.setDatums;
obj.datumInput.Tooltip = Aes.strLib('analyze:datumInput');

obj.labelFunction = uicontrol(obj.container,...
  'style', 'text', 'backgroundcolor', ones(1,3).*0.9601,...
  'units', 'pixels');
obj.labelFunction.Position = [10,h-75,w-20,12];
obj.labelFunction.String = 'Function Call';
obj.labelFunction.FontSize = 9;
obj.labelFunction.FontName = 'Courier New';
obj.labelFunction.HorizontalAlignment = 'center';

obj.labelNargout = uicontrol(obj.container,...
  'style', 'text', 'backgroundColor', [1,1,1],...
  'units', 'pixels');
obj.labelNargout.Position = [0, h-110, fix(w/2), 30];
obj.labelNargout.String = 'Output Arguments';
obj.labelNargout.FontSize = 16;


obj.labelNargin = uicontrol(obj.container,...
  'style', 'text', 'backgroundColor', [1,1,1],...
  'units', 'pixels');
obj.labelNargin.Position = [fix(w/2)+1, h-110, fix(w/2), 30];
obj.labelNargin.String = 'Input Arguments';
obj.labelNargin.FontSize = 16;


obj.panelOutput = uipanel(obj.container, ...
  'highlightcolor', ones(1,3).*0.9804,...
  'backgroundcolor', [1 1 1],...
  'units', 'pixels', ...
  'tag', 'Output');
obj.panelOutput.Position = [10,60,fix(w/2)-20,h-170];
obj.panelOutput.BorderType = 'none';
obj.panelOutput.Clipping = 'off';


obj.tableOutput = uitable(obj.panelOutput, ...
  'units', 'normalized', ...
  'position', [0,0,1,1], ...
  'backgroundcolor', [1,1,1],...
  'rowname', {}, ...
  'columnname', {'Argument', '<html><center>Desired<br />Name</center>'}, ...
  'columnformat', {'char', 'char'},...
  'columneditable', [false,true], ...
  'columnwidth', num2cell(obj.panelOutput.Position([3,3])./2 + [-11,10]), ...
  'rowstriping', 'off', ...
  'data', cell(1,2), ...
  'celleditcallback', @obj.validateTableEntry ...
  );
obj.tableOutput.Tag = 'Output';
% get the ratio of cell widths for resize function
obj.panelOutput.UserData = obj.tableOutput.ColumnWidth{1};
obj.panelOutput.SizeChangedFcn = @obj.tableChangeSize;

obj.panelInput = uipanel(obj.container, ...
  'highlightcolor', ones(1,3).*0.9804,...
  'backgroundcolor', [1 1 1],...
  'units', 'pixels', ...
  'tag', 'Input' ...
  );
obj.panelInput.Position = [fix(w/2)+11,60,fix(w/2)-20,h-170];
obj.panelInput.BorderType = 'none';
obj.panelInput.Clipping = 'off';


obj.tableInput = uitable(obj.panelInput, ...
  'units', 'normalized', ...
  'position', [0,0,1,1], ...
  'backgroundcolor', [1,1,1],...
  'rowname', {}, ...
  'columnname', ...
    {'Argument', ...
    ['<html><center>Input Value<br /><font', ...
     ' style="font-size:9pt">(MATLAB Expression)</font></center>']}, ...
  'columnformat', {'char', 'char'},...
  'columneditable', [false,true], ...
  'columnwidth', num2cell(obj.panelOutput.Position([3,3])./2 + [-11,10]), ...
  'rowstriping', 'off', ...
  'data', cell(1,2), ...
  'celleditcallback', @obj.validateTableEntry);
obj.tableInput.Tag = 'Input';

% get the ratio of cell widths for resize function
obj.panelInput.UserData = obj.tableInput.ColumnWidth{1};
obj.panelInput.SizeChangedFcn = @obj.tableChangeSize;

obj.editFileOutput = uicontrol(obj.container,...
  'style', 'edit',...
  'fontname', 'Courier New',...
  'String', obj.Opts.AnalysisPrefix(),...
  'units', 'pixels');
obj.editFileOutput.Position = [20,30,315,20];
obj.editFileOutput.Callback = @obj.validateFilename;

obj.labelFileRoot = uicontrol(obj.container,...
  'style', 'text', 'backgroundColor', [1,1,1],...
  'units', 'pixels');
obj.labelFileRoot.Position = [10, 3, 360, 20];
obj.labelFileRoot.String = obj.Opts.OutputDirectory;
obj.labelFileRoot.FontSize = 10;

obj.buttonPutFile = uicontrol(obj.container,...
  'style', 'pushbutton', 'string', '...', ...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels');
obj.buttonPutFile.Position = [340,30,21,21];
obj.buttonPutFile.Callback = @obj.setFile;

obj.checkboxSendToCmd = uicontrol(obj.container,...
  'style', 'checkbox', ...
  'units', 'pixels', ...
  'value', false, ...
  'backgroundcolor', [1,1,1]);
obj.checkboxSendToCmd.Position = [w-160-10, 30, 80, 20];
obj.checkboxSendToCmd.String = ...
  ['<html><font ', ...
  'style="font-size:7px;generic-family:serif;">', ...
  'Send Global</font>'];
obj.checkboxSendToCmd.Tooltip = Aes.strLib('analyze:checkboxSendToCmd');

obj.checkboxAppend= uicontrol(obj.container,...
  'style', 'checkbox', ...
  'units', 'pixels', ...
  'value', false, ...
  'backgroundcolor', [1,1,1]);
obj.checkboxAppend.Position = [w-160-10, 10, 80, 20];
obj.checkboxAppend.String = ...
  ['<html><font ', ...
  'style="font-size:7px;generic-family:serif;">', ...
  'Append</font>'];
obj.checkboxAppend.Tooltip = Aes.strLib('analyze:checkboxAppend');


obj.buttonGo = uicontrol(obj.container,...
  'style', 'pushbutton', 'string', 'Go',...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels');
obj.buttonGo.Position = [w-80,10,60,20];
obj.buttonGo.Callback = @obj.executeFunction;
obj.buttonGo.Enable = 'off';

obj.buttonClose = uicontrol(obj.container,...
  'style', 'pushbutton', 'string', 'Close', ...
  'backgroundColor', ones(1,3).*0.9804,...
  'units', 'pixels');
obj.buttonClose.Position = [w-80,35,60,20];
obj.buttonClose.Callback = @(s,e)notify(obj,'Close');



%tables made, now normalize the panels so the figure can be resized.
obj.labelTitle.Units = 'normalized';
obj.labelFunction.Units = 'normalized';
obj.labelNargout.Units = 'normalized';
obj.labelNargin.Units = 'normalized';
obj.panelInput.Units = 'normalized';
obj.panelOutput.Units = 'normalized';
obj.tableInput.Units = 'normalized';
obj.tableOutput.Units = 'normalized';
obj.buttonGo.Units = 'normalized';
obj.buttonClose.Units = 'normalized';
obj.editFileOutput.Units = 'normalized';
obj.checkboxSendToCmd.Units = 'normalized';
obj.checkboxAppend.Units = 'normalized';
obj.selectAnalysis.Units = 'normalized';
obj.datumInput.Units = 'normalized';
obj.refreshAnalysesButton.Units = 'normalized';
obj.editAnalysisButton.Units = 'normalized';
obj.setDefaultsButton.Units = 'normalized';
obj.buttonPutFile.Units = 'normalized';
obj.labelFileRoot.Units = 'normalized';
%% Now change the size
pos = obj.position;
if isempty(pos)
  pos = utilities.centerFigPos(w,h);
end
obj.position = pos; %sets container too
end