classdef about < iris.ui.UIContainer
  %ABOUT Display information about Iris.
  properties
    Logo
    Headline
    ByLine
    Contents
  end
  
  methods (Access = protected)
    
    % Startup
    function startupFcn(obj,varargin)
      import iris.app.Info;
      
      % read css
      cssFile = scriptRead(...
        {fullfile(iris.app.Info.getResourcePath, ...
          'scripts', 'about.css')}, ...
        false, false, '''');
      
      obj.window.executeJS('var css,logoPanel,logo,contentsPanel,contents;');
      aboutText = Info.Summary;
      aboutText = sprintf( ...
        [ ...
          '<p class="lab"><span class="inc b">%s</span> (%s). %s.</p>', ...
          '<p class="lab dec">%s ',...
          '<span class="b">Version %s, developed for %s, by %s.', ...
          '</span> This software is provided as-is under the MIT License. ', ...
          '<span class="i">See the github repository for more information.</span></p>' ...
        ], ...
        aboutText{:});
      iter = 0;
      pause(0.1);
      while true
        try
          % inject css
          obj.window.executeJS( ...
            [ ...
              'if (typeof css === ''undefined'') {',...
              'css = document.createElement("style");', ...
              'document.head.appendChild(css);', ...
              '}' ...
            ]);
          obj.window.executeJS(['css.innerHTML = `',cssFile{1},'`;']);
          % insert logo
          obj.window.executeJS(...
            sprintf(...
            [ ...
              'if (typeof logo === ''undefined'') {',...
                'logo = document.createElement("div");', ...
                'logo.id = "logo";', ...
              '}', ...
              'logo.innerHTML = `%s`;', ...
            ], ...
            fileread( ...
              fullfile( ...
                iris.app.Info.getResourcePath, 'img', 'Irissm.svg' ...
              ) ...
            )) ...
            );
          [~,id] = mlapptools.getWebElements(obj.Logo);
          obj.window.executeJS( ...
            sprintf([ ...
            'logoPanel = dojo.query("[%s = ''%s'']")[0].lastChild;', ...
            'logoPanel.appendChild(logo);' ...
            ], ...
            id.ID_attr, id.ID_val ...
            ) ...
            );
          % find contents panel and insert aboutText
          obj.window.executeJS(...
            sprintf(...
            [ ...
              'if (typeof contents === ''undefined'') {',...
                'contents = document.createElement("div");', ...
                'contents.classList.add("labDiv");', ...
              '}', ...
              'contents.innerHTML = `%s`;', ...
            ], ...
            aboutText) ...
            );
          [~,id] = mlapptools.getWebElements(obj.Contents);
          obj.window.executeJS( ...
            sprintf([ ...
            'contentsPanel = dojo.query("[%s = ''%s'']")[0].lastChild;', ...
            'contentsPanel.appendChild(contents);' ...
            ], ...
            id.ID_attr, id.ID_val ...
            ) ...
            );
        catch x
          %log this
          iter = iter+1;
          if iter > 5, rethrow(x); end
          pause(0.25);
          continue;
        end
        break;
      end
      % add the close listener
      addlistener(obj, 'Close', @(s,e)obj.onCloseRequest);
    end
    
    % Construct view
    function createUI(obj)
      % imports
      import iris.app.Info;
      
      pos = obj.position;
      if isempty(pos)
        initW = 500;
        initH = 480;
        pos = centerFigPos(initW,initH);
      end
      obj.position = pos;
      
      % Container
      obj.container.Name = sprintf('%s v%s',Info.name,Info.version('major'));
      obj.container.Color = [0 0 0];
      
      % Create Logo
      obj.Logo = uipanel(obj.container);
      obj.Logo.ForegroundColor = [0 0 0];
      obj.Logo.BorderType = 'none';
      obj.Logo.BackgroundColor = [0 0 0];
      obj.Logo.Position = [77 124 345 345];

      % Create Contents
      obj.Contents = uipanel(obj.container);
      obj.Contents.BorderType = 'none';
      obj.Contents.BackgroundColor = [0 0 0];
      obj.Contents.Position = [20 15 460 75];

      % Create Headline
      obj.Headline = uilabel(obj.container);
      obj.Headline.HorizontalAlignment = 'center';
      obj.Headline.VerticalAlignment = 'bottom';
      obj.Headline.FontName = 'Times New Roman';
      obj.Headline.FontSize = 72;
      obj.Headline.FontWeight = 'bold';
      obj.Headline.FontColor = [1 1 1];
      obj.Headline.Position = [123 111 113 90];
      obj.Headline.Text = Info.name;

      % Create ByLine
      obj.ByLine = uilabel(obj.container);
      obj.ByLine.VerticalAlignment = 'bottom';
      obj.ByLine.FontName = 'Times New Roman';
      obj.ByLine.FontWeight = 'bold';
      obj.ByLine.FontAngle = 'italic';
      obj.ByLine.FontColor = [1 1 1];
      obj.ByLine.Position = [215 103 164 22];
      obj.ByLine.Text = Info.extendedName;
    end
    
    function onCloseRequest(obj)
      obj.shutdown;
      obj.reset;
      obj.save;
    end
    
  end
  
end