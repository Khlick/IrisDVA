function str = strLib( stringID )
%STRLIB A library collection of common strings and tooltips organized for easy
%readability.

switch stringID
  case 'ScaleSwitch'
    str = 'Toggle scaling.';
  case 'currentDatum'
    str = 'The index number of the first visible datum.';
  case 'DatumSwitch'
    str = 'Toggle datum''s inclusion status.';
  case 'FilterSwitch'
    str = 'Toggle digital filtering.';
  case 'BaselineSwitch'
    str = 'Toggle baseline subtraction.';
  case 'StatsSwitch'
    str = 'Toggle aggregates. See preferences > Stats';
  case 'keyboardRules'
    str = [ ...
      'var styleNode = document.createElement(''style'');', ...
      'styleNode.innerHTML = ''', ...
      '.aside {\n', ...
      '  font-size: 17px !important;\n', ...
      '  height: 320px !important;\n', ...
      '  width: 405px !important;\n', ...
      '  line-height: 22px !important;', ...
      '  font-family: "Times New Roman", Times, serif;\n',...
      '}\n', ...
      '.aside h2 {\n', ...
      '  margin-top: 10px;\n', ...
      '}\n', ...
      '.aside hr {\n', ...
      '  margin: 2px 0px 5px;\n', ...
      '}\n', ...
      'kbd {\n',...
      '  display: inline-block;\n',...
      '  padding: 2px 7px;\n',...
      '  line-height: 23px;\n',...
      '  color: #444d56;\n',...
      '  vertical-align: middle;\n',...
      '  background-color: #fafbfc;\n',...
      '  border: solid 1px #c6cbd1;\n',...
      '  border-bottom-color: #959da5;\n',...
      '  border-radius: 3px;\n',...
      '  box-shadow: inset 0 -1px 0 #959da5;\n',...
      '  font: 20px "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n',...
      '}\n'';', ...
      'document.head.appendChild(styleNode);' ...
      ];
  case 'keyboardHTML'
    str = [ ...
      '<h2>Navigation</h2>\n<hr>\n', ...
      '<p><kbd>&larr;</kbd>, <kbd>&rarr;</kbd>: Navigate by small datum steps.</p>\n',...
      '<p><kbd>&uarr;</kbd>, <kbd>&darr;</kbd>: Overlay by small overlay steps.</p>\n',...
      '<p><kbd>Shift</kbd> + <kbd>&larr;,&rarr;,&uarr;,&darr;</kbd>: Use big step.</p>\n',...
      '<p><kbd>Ctrl</kbd> + <kbd>&larr;,&rarr;</kbd>: First / Last record.</p>\n',...
      '<h2>Display Toggles</h2>\n<hr>\n', ...
      '<p><kbd>Alt</kbd>+<kbd>F</kbd>: Toggle filter.</p>\n',...
      '<p><kbd>Alt</kbd>+<kbd>S</kbd>: Toggle scale factor.</p>\n',...
      '<p><kbd>Alt</kbd>+<kbd>B</kbd>: Toggle baseline subtraction</p>\n',...
      '<p><kbd>X</kbd>: Toggle inclusion of current datum.</p>\n',...
      '<h2>Menu Actions</h2>\n<hr>\n', ...
      '<p><kbd>Ctrl</kbd>+<kbd>N</kbd>: Load a new supported data file.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>O</kbd>: Open a saved Session.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>S</kbd>: Save the current Session.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>Q</kbd>: Quit Program.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>I</kbd>: View current file information.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>T</kbd>: View digital notes.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>P</kbd>: View datum protocols or settings.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>D</kbd>: Open analysis interface.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>M</kbd>: Send to MATLAB Workspace.</p>\n',...
      '<p><kbd>Ctrl</kbd>+<kbd>H</kbd>: View documentation.</p>\n',...
      '<h2>Miscellaneous Actions</h2>\n<hr>\n', ...
      '<p><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>P</kbd>: Take screenshot.</p>\n',...
      '<br>\n' ...
      ];
  case 'analysisReadme'
    str =       {[ ...
        {'% ENTER ANALYSIS DESCRIPTIONS HERE'}; ...
        {'%'}; ...
        {'% ----------------------------------------------------------------------- %'}; ...
        {'% README!!!'}; ...
        {'% ---------- %'}; ...
        {'% This template has a special syntax for Iris.'}; ...
        {'%'}; ...
        {'% It is always best to put some sort of description in the header of'}; ...
        {'% the analysis function so that you, and/or others, can understand the'}; ...
        {'% purpose of the function as well as all the arguments (input and output).'}; ...
        {'% It is also very good practice to keep a log of changes and notes related'}; ...
        {'% to the function''s purpose up here.'}; ...
        {'%'}; ...
        {'% First, we must have Data as the first argument to the function. This'}; ...
        {'% argument will be of class IrisData, the file should be on your MATLAB'}; ...
        {'% path so you can use it while Iris is running or later in your MATLAB session.'}; ...
        {'% This object has a few convenience methods builtin that help you perform'}; ...
        {'% common tasks such as averaging groups of Datums. For a detailed'}; ...
        {'% description of the included methods, see doc(''IrisData'').'}; ...
        {'%'}; ...
        {'% Next, any input can have, but doesn''t require, a default value which'}; ...
        {'% we can set in a special syntax, shown below. Briefly, using the block'}; ...
        {'% comment tags %{...%}, and the definition sign, a colon followed by an'}; ...
        {'% equals sign, we can set default values. '}; ...
        {'%'}; ...
        {'% It is important that 1) argument default names are case-sensitive and'}; ...
        {'% MUST match the argument name in the function definition line and 2) must'}; ...
        {'% be valid MATLAB expressions, that is, if you need it to be a char vector,'}; ...
        {'% then you must wrap the text in double quotes. Note that spaces are'}; ...
        {'% ignored so separate array elements with commas, and each definition '};...
        {'% MUST ONLY BE ONE LINE. The parser will ignore'}; ...
        {'% any line breaks and using the MATLAB newline syntax, ..., will break the'}; ...
        {'% parser.'}; ...
        {'%'}; ...
        {'% --- SET YOUR DEFAULTS BELOW --- %'}; ...
        {'%{'}; ...
        {'DEFAULTS'} ...
      ]; ...
      [ ...
        {'%}'}; ...
        {'%'}; ...
        {'% ----------------------------------------------------------------------- %'}; ...
        {''}; ...
        {'%% Begin Analysis'}; ...
        {'% Use the Data object, see doc(''IrisData'')'}; ...
        {''}; ...
        {''}; ...
        {''}; ...
        {''}; ...
      ]; ...
      [ ... 
        {'end % End of analysis'} ...
      ]}; %#ok
  case 'readerReadme'
    str = { ...
      '% Create your reader function below.'; ...
      '% Do not alter the above header line, or else the reader will fail.'; ...
      '% '; ...
      '% Feel free to delete the below description once you understand the requirements.'; ...
      '% '; ...
      '% Output: DATA must be a struct. If the reader parses multiple files,'; ...
      '%   e.g. input fileName is the first of series of and the reader locates'; ...
      '%   the rest of the series, each file must be represented by a single cell'; ...
      '%   in the DATA struct fields should you want Iris to honor their original'; ...
      '%   sources. Each field of DATA should thus contain a 1xnFiles cell. The '; ...
      '%   contents of each cell is below. The DATA struct should be of the pattern:'; ...
      '%   for 2 data files, DATA is a struct with fields:'; ...
      '%     Meta: {[1x1 struct]  [1x1 struct]}'; ...
      '%     Data: {[92x1 struct]  [37x1 struct]}'; ...
      '%     Notes: {{2x2 cell}  {1x2 cell}}'; ...
      '%     Files: {1x2 cell}'; ...
      '% '; ...
      '% @field Meta:'; ...
      '%     Meta are displayed in Iris > View > File Info, where each Meta cell'; ...
      '%   is parsed as a tree and thus must be a scalar struct.'; ...
      '%     Each Meta cell must contain a struct where each field represents some'; ...
      '%   property of the file, e.g. the files storage location, the rig used, '; ...
      '%   a description of the experiment, the acquisition software version and'; ...
      '%   any device information.'; ...
      '%     Each field should be a either a character array or a struct. Any field'; ...
      '%   containing a struct will be parsed as a sub-node in the File Info dialog.'; ...
      '% '; ...
      '% >>>> Meta{1} >> struct with fields:'; ...
      '%              File: "2018-10-31.h5"'; ...
      '%          Location: "W:\My Drive\Sampath\_data"'; ...
      '%      experimenter: "Khris"'; ...
      '%       institution: "UCLA"'; ...
      '%               lab: "SampathLab"'; ...
      '%             setup: "patchMain"'; ...
      '%               rig: "SingleAmp"'; ...
      '%           project: "MysteryMouse"'; ...
      '%         StartTime: "07:39:43.6874"'; ...
      '%           EndTime: "10:15:42.1496"'; ...
      '%           Purpose: "Determine Bipolar responses in mystery mouse"'; ...
      '%   SymphonyVersion: "2.5.3.4"'; ...
      '%           Devices: [1x6 struct]'; ...
      '%           Sources: [1x1 struct]'; ...
      '%             Label: {"Retina"}'; ...
      '% '; ...
      '% @field Notes:'; ...
      '%     Notes are displayed in Iris > View > Notes, where each Notes cell'; ...
      '%   is parsed as a two-column table and thus must be a Nx2 cell.'; ...
      '% '; ...
      '% @field Files <conditionally optional>:'; ...
      '%     Files are a cellstr of file names either just {fileName} or of each'; ...
      '%   additionally parsed file. If only parsing input fileName, this field'; ...
      '%   this field may be omitted from the DATA struct.'; ...
      '% '; ...
      '% @field Data:'; ...
      '%     Data are simple struct arrays but have a specific layout and format in'; ...
      '%   order for Iris to display them correctly and parse them for analysis.'; ...
      '%     Each Data cell must contain a struct array, preferably column oriented.'; ...
      '%   The specific layout is required and described below.'; ...
      '%     There is some flexibility with the types of data stored for each field'; ...
      '%   and field <inclusion> is optional, but must be either present or omitted'; ...
      '%   for all elements in the struct array (a MATLAB requirement is that struct'; ...
      '%   arrays all have the same field names and datatypes).'; ...
      '%   '; ...
      '%   An example for a single Data{1}(1) struct is:'; ...
      '%   >>>> Data{1}(1) >> struct with fields:'; ...
      '%             protocols: {26x2 cell}'; ...
      '%     displayProperties: {15x2 cell}'; ...
      '%             responses: [1x1 struct]'; ...
      '%             inclusion: <logical> 1'; ...
      '%   protocols: an Nx2 cell (table-like) which contains {property,value} pairs'; ...
      '%     of information for the specific datum/response/record. For example,'; ...
      '%     here is an entry collected from a Symphony v2 file, populated from the '; ...
      '%     properties of the specific protocol run and any additional properties added '; ...
      '%     by the datum.addProperty() method:'; ...
      '%   '; ...
      '%   >>>> Data{1}(1).protocols >> 26x2 cell array:'; ...
      '%     {"protocolStartTime"        }    {"10:06:44.1364"              }'; ...
      '%     {"protocolID"               }    {"utilities.protocols.LEDSinglePulse"}'; ...
      '%     {"amp"                      }    {"Axopatch200B"               }'; ...
      '%     {"asFamily"                 }    {[                          1]}'; ...
      '%     {"delayBetweenDatums"       }    {[                          0]}'; ...
      '%     {"firstLightAmplitude"      }    {[                     0.0015]}'; ...
      '%     {"led"                      }    {"LED 505nm"                  }'; ...
      '%     {"lightBackground"          }    {[                          0]}'; ...
      '%     {"numberOfAverages"         }    {[                          4]}'; ...
      '%     {"preTime"                  }    {[                        200]}'; ...
      '%     {"pulsesInFamily"           }    {[                          9]}'; ...
      '%     {"sampleRate"               }    {[                      10000]}'; ...
      '%     {"stimTime"                 }    {[                         10]}'; ...
      '%     {"stimValues"               }    {9x1 double                   }'; ...
      '%     {"tailTime"                 }    {[                       1290]}'; ...
      '%     {"temp"                     }    {"Temperature Monitor"        }'; ...
      '%     {"totalDatumTime"           }    {[                       1500]}'; ...
      '%     {"datumStartTime"           }    {"10:06:44.8859"              }'; ...
      '%     {"datumDateString"          }    {"2018Oct31_10:06:44.184"     }'; ...
      '%     {"identifier"               }    {"LEDSinglePulse"             }'; ...
      '%     {"displayName"              }    {"One LED Pulse"              }'; ...
      '%     {"lightAmplitude"           }    {[                   0.010845]}'; ...
      '%     {"meanTemperature"          }    {[            3.6367960208336]}'; ...
      '%     {"varTemperature"           }    {[       2.22715941045403e-07]}'; ...
      '%     {"unitsTemperature"         }    {"V"                          }'; ...
      '%     {"amplifierHoldingPotential"}    {"-60.000mV"                  }'; ...
      '%   *note that the value field can be pretty much anything but a struct(), though '; ...
      '%     char arrays are always preferred.'; ...
      '%   '; ...
      '%   displayProperties: an Nx2 cell (table-like) of {property,value} pairs'; ...
      '%     of information to be displayed in the Iris main UI in the Current Info field.'; ...
      '%     Technically, this field can be empty, but typically it contains information '; ...
      '%     specific to the currently displayed datum and, for example, is populated in '; ...
      '%     the Symphony Reader by properties relating to a datum group. In the Sampath '; ...
      '%     Lab, we typically use 1 datum group per cell (slice/suction) or prep (erg).'; ...
      '%     An example case is:'; ...
      '%   '; ...
      '%   >>>> Data{1}(1).displayProperties >> 15x2 cell array:'; ...
      '%     {"File"                     }    {"2018-10-31.h5"              }'; ...
      '%     {"protocolID"               }    {"utilities.protocols.LEDSinglePulse"}'; ...
      '%     {"sampleRate"               }    {[                      10000]}'; ...
      '%     {"amplifierHoldingPotential"}    {"-60.000mV"                  }'; ...
      '%     {"NumDatumsInRun"           }    {[                         36]}'; ...
      '%     {"CurrentDatumInRun"        }    {[                          1]}'; ...
      '%     {"Date"                     }    {"2018Oct31"                  }'; ...
      '%     {"Time"                     }    {"10:06:44.184"               }'; ...
      '%     {"cellType"                 }    {0x0 double                   }'; ...
      '%     {"externalSolutionControl"  }    {"AMES"                       }'; ...
      '%     {"externalSolutionDrug"     }    {0x0 double                   }'; ...
      '%     {"externalSolutionWash"     }    {0x0 double                   }'; ...
      '%     {"internalSolution"         }    {"K-Asp"                      }'; ...
      '%     {"purpose"                  }    {0x0 double                   }'; ...
      '%     {"sliceNumber"              }    {[                          0]}'; ...
      '%     {"Label"                    }    {"RBC"                        }'; ...
      '%   *note that some of the fields are redundant from Data{1}(1).protocols and '; ...
      '%   Meta{1}, this is because we selectively populate this field from datumGroups '; ...
      '%   and whatever else we want to have readily viewable from the main Iris UI.'; ...
      '% '; ...
      '%   responses: This is the single most important field of the Data struct. Except '; ...
      '%     for configuration fields, every field must be a cell array. The length of'; ...
      '%     the cell arrays should be equal with each element corresponding to a '; ...
      '%     concurrent recording device, see example below. Iris can accept values for '; ...
      '%     field "x" that are numeric and of the same size as the corresponding "y"'; ...
      '%     values or a function that, upon call, return an appropriately sized numeric'; ...
      '%     array.'; ...
      '%       The "units" field contains a struct for each response device with unit'; ...
      '%     labels for "x" and "y". That is: '; ...
      '%           struct(''x'', ''seconds'', ''y'', ''mV'')'; ...
      '%       Configuration fields are expected to be struct arrays. The fields are'; ...
      '%     parsed similar to those in Meta.'; ...
      '%   '; ...
      '%   >>>> Data{1}(1).responses >> struct with fields:'; ...
      '%   '; ...
      '%                sampleRate: {[10000]  [10000]}'; ...
      '%                     units: {[1x1 struct]  [1x1 struct]}'; ...
      '%                   devices: {"Axopatch200B"  "LED 505nm"}'; ...
      '%                         x: {1x2 cell}'; ...
      '%                         y: {[40000x1 double]  [40000x1 double]}'; ...
      '%     stimulusConfiguration: [1x1 struct]'; ...
      '%       deviceConfiguration: [1x5 struct]'; ...
      '%   '; ...
      '%   inclusion: This field is optional and is mutated by Iris through a toggle'; ...
      '%     switch. The value here indicates if this particular datum should be '; ...
      '%     included in analyses.'; ...
      '%   >>>> Data{1}(1).inclusion >> [logical] true'; ...
      ' '; ...
      '%% Begin reading data file'; ...
      '%  Use the following template:'; ...
      'DATA = struct();'; ...
      'DATA.Meta = {[struct()]};'; ...
      'DATA.Notes = {[{''Timestamp'',''Note''}]};'; ...
      'DATA.Data = {[struct()]};' ...
    };
  case 'ViewNotesButton'
    str = 'View notes.';
  case 'ExtendedInfoButton'
    str = 'View data overview.';
  case 'CurrentDatumDecSmall'
    str = 'Decrement view by small step.';
  case 'CurrentDatumIncSmall'
    str = 'Increment view by small step.';
  case 'OverlapInc'
    str = 'Increment number of datums shown.';%(%E2%87%A7)';
  case 'OverlapDec'
    str = 'Decrement number of datums shown.';
  case 'CurrentDatumIncBig'
    str = 'Increment view by big step.';
  case 'CurrentDatumDecBig'
    str = 'Decrement view by big step.';
  case 'analyze:selectAnalysis'
    str = [ ...
      '<html><center>',...
      'Analyses reside in the user Iris folder (See View>Preferences>Workspace).<br>', ...
      'Changing analyses reloads defaults.' ...
      ];
  case 'analyze:datumInput'
    str = [ ...
      '<html><center>Enter epoch numbers to analyze, as a MATLAB expression.<br>', ...
      'This will automatically update from Iris.' ...
      ];
  case 'analyze:checkboxSendToCmd'
    str = [ ...
      '<html><center>', ...
      'Set <em>true</em> to send the result<br>', ...
      'to the MATLAB workspace.</center>' ...
      ];
  case 'analyze:checkboxAppend'
    str = [ ...
      '<html><center>', ...
      'Set <em>true</em> to append this result<br>', ...
      'to the existing data in the specified file.<br>', ...
      'A value of <em>false</em> will overwrite the file.</center>' ...
      ];
  case 'analyze:editAnalysisTooltip'
    str = 'Open current analysis in the editor.';
  case 'analyze:refreshAnalysisTooltip'
    str = '<html><center>Refresh analysis list.<br><em>Note: This will reload defaults.</em>';
  case 'analyze:updateAnalysisTooltip'
    str = 'Set the current values as new defaults.';
  otherwise
    %convert string ID from camel to sentence case.
    str = regexprep(stringID, '(?<=[a-z])[A-Z]', ' $0');
    str = regexprep(str, '(?<=\s)[A-Z](?![A-Z])', '${lower($0)}');
    str = regexprep(str, '^.', '${upper($0)}');
end

end

