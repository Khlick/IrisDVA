function tableDat = collapseUnique(d,columnAnchor,stringify,uniquify)
% COLLAPSEUNIQUE Collapse repeated cell entries as determined by columnAnchor.
if nargin < 4, uniquify = true; end
if nargin < 3, stringify = false; end

%imports
import utilities.unknownCell2Str;
import utilities.uniqueContents;

keyNames = unique(d(:,columnAnchor),'stable');
others = ~ismember(1:size(d,2), columnAnchor);
% collect repeated values in cell arrays
keyData = cellfun( ...
  @(x)d(ismember(d(:,columnAnchor),x),others), ...
  keyNames, ...
  'UniformOutput', false ...
  );
tableDat = [ ...
  keyNames(:), ...
  keyData(:) ...
  ];
% set all values column to strings
if stringify
  tableDat(:,2) = arrayfun( ...
    @(a)unknownCell2Str(a,';',uniquify), ...
    tableDat(:,2), ...
    'UniformOutput', false ...
    );
  % unknowncell2str will handle uniquifying cells, so we can exit here
  return
end
% if uniquify is true but items were not stringified, gather the unique contents
if uniquify
  tableDat(:,2) = cellfun( ...
    @(v) uniqueContents(v), ...
    tableDat(:,2), ...
    'UniformOutput', false ...
    );
end

end